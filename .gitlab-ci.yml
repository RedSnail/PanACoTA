image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/testing-ubuntu

stages:
  - build
  - test
  - coverage
  - doc
  - deploy


build-from-ubuntu:
  image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/install-ubuntu
  stage: build
  only:
    - install
  script:
    - pip3 install --upgrade pip
    - pip3 install -r requirements-dev.txt
    - py.test test/test_install/test_make_ubuntu.py


build-from-barrnap:
  image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/install-ubuntu-barrnaponly
  stage: build
  only:
    - install
  script:
    - pip3 install --upgrade pip
    - pip3 install -r requirements-dev.txt
    - py.test test/test_install/test_make_barrnap.py

build-from-prokka:
  image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/install-ubuntu-prokkaonly
  stage: build
  only:
    - install
  script:
    - pip3 install --upgrade pip
    - pip3 install -r requirements-dev.txt
    - py.test test/test_install/test_make_prokka.py

build-from-prokka-quicktree:
  image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/install-ubuntu-annote-quicktree
  stage: build
  only:
    - install
  script:
    - pip3 install --upgrade pip
    - pip3 install -r requirements-dev.txt
    - py.test test/test_install/test_make_prokka-quicktree.py

build-from-prodigal:
  image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/install-prodigal
  stage: build
  only:
    - install
  script:
    - pip3 install --upgrade pip
    - pip3 install -r requirements-dev.txt
    - py.test test/test_install/test_make_prodigal.py

build-from-test-image:
  stage: build
  only:
    - install
  script:
    - pip3 install --upgrade pip
    - pip3 install -r requirements-dev.txt
    - py.test test/test_install/test_make_all-installed.py

unit-test-ubuntu:
  stage: test
  except:
    - docker
    - helpers
  before_script:
    - pip3 install --upgrade pip
    - pip3 install -r requirements-dev.txt
    - ./make
  script:
    - py.test test/test_unit/test_prepare -sv
    # - mv .coverage .coverage-unit
  artifacts:
    paths:
      - .coverage-unit
    expire_in: 1 hour


# func-test-ubuntu16.04:
#   stage: test
#   except:
#     - docker
#     - helpers
#   before_script:
#     - pip3 install -r requirements-dev.txt
#     - ./make
#   script:
#     - py.test test/test_functional
#     - mv .coverage .coverage-functional
#   artifacts:
#     paths:
#       - .coverage-functional
#     expire_in: 1 hour

coverage:
  stage: coverage
  except:
    - docker
    - helpers
  dependencies:
    - unit-test-ubuntu16.04
    - func-test-ubuntu16.04
  before_script:
    - pip3 install -r requirements-dev.txt
  script:
    # - coverage combine .coverage-unit .coverage-functional
    - coverage report
    - coverage html
  artifacts:
    paths:
      - htmlcov
    expire_in: 1 hour

# sphinx-doc:
#   stage: doc
#   only:
#     - master
#     - doc
#   before_script:
#     - pip3 install -r requirements-dev.txt
#     - ./make
#   script:
#     - cd doc/source
#     - make html
#   artifacts:
#     paths:
#       - doc/build/html
#     expire_in: 1 hour

# pages:
#   stage: deploy
#   dependencies:
#     - coverage
#     - sphinx-doc
#   script:
#     - mkdir -p public/htmlcov
#     - mv htmlcov public
#     - mkdir -p public/html-doc
#     - mv doc/build/html html-doc
#     - mv html-doc public
#   artifacts:
#     paths:
#       - public
#     expire_in: 1 hour
#   only:
#     - master
#     - doc
