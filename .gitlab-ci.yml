image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/testing-ubuntu

stages:
  - build
  - test
  - coverage
  - doc
  - deploy

build-from-base:
  image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/install-ubuntu-base
  stage: build
  only:
    - install
  script:
    - pip3 install -r requirements-dev.txt
    - py.test test/test_install/test_make_base.py


build-from-barrnap:
  image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/install-ubuntu-barrnaponly
  stage: build
  only:
    - install
  script:
    - python3 make
    - echo $(barrnap -h)
    - echo $(prokka -h)
    - genomeAPCAT -h

build-from-prokka:
  image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/install-ubuntu-prokkaonly
  stage: build
  only:
    - install
  script:
    - python3 make
    - echo $(barrnap -h)
    - echo $(prokka -h)
    - genomeAPCAT -h

build-from-prokka-user:
  image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/install-ubuntu-prokkaonly
  stage: build
  only:
    - install
  script:
    - echo $(genomeAPCAT -h)
    - python3 make --user
    - echo $(barrnap -h)
    - echo $(prokka -h)
    - genomeAPCAT -h
    - ./make upgrade
    - echo $(genomeAPCAT -h)
    - ./make uninstall
    - echo $(genomeAPCAT -h)

unit-test-ubuntu16.04:
  stage: test
  except:
    - docker
    - helpers
  before_script:
    - pip3 install -r requirements-dev.txt
    - ./make
  script:
    - py.test test/test_unit
    - more test_mmseq_cluster.log
    - mv .coverage .coverage-unit
  artifacts:
    paths:
      - .coverage-unit
    expire_in: 1 hour

func-test-ubuntu16.04:
  stage: test
  except:
    - docker
    - helpers
  before_script:
    - pip3 install -r requirements-dev.txt
    - ./make
  script:
    - py.test test/test_functional
    - mv .coverage .coverage-functional
  artifacts:
    paths:
      - .coverage-functional
    expire_in: 1 hour

coverage:
  stage: coverage
  except:
    - docker
    - helpers
  dependencies:
    - unit-test-ubuntu16.04
    - func-test-ubuntu16.04
  before_script:
    - pip3 install -r requirements-dev.txt
  script:
    - coverage combine .coverage-unit .coverage-functional
    - coverage report
    - coverage html
  artifacts:
    paths:
      - htmlcov
    expire_in: 1 hour

sphinx-doc:
  stage: doc
  only:
    - master
    - doc
  before_script:
    - ./make
  script:
    - cd doc/source
    - make html
  artifacts:
    paths:
      - doc/build/html
    expire_in: 1 hour

pages:
  stage: deploy
  dependencies:
    - coverage
    - sphinx-doc
  script:
    - mkdir -p public/htmlcov
    - mv htmlcov public
    - mkdir -p public/html-doc
    - mv doc/build/html html-doc
    - mv html-doc public
  artifacts:
    paths:
      - public
    expire_in: 1 hour
  only:
    - master
    - doc
